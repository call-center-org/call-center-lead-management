name: Deploy to CloudBase

on:
  push:
    branches:
      - main
  workflow_dispatch: # 允许手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: 部署前后端到 CloudBase

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 安装 CloudBase CLI
        run: |
          npm install -g @cloudbase/cli@latest
          tcb -v

      - name: 部署到 CloudBase
        env:
          CLOUDBASE_SECRET_ID: ${{ secrets.CLOUDBASE_SECRET_ID }}
          CLOUDBASE_SECRET_KEY: ${{ secrets.CLOUDBASE_SECRET_KEY }}
          TCB_SECRET_ID: ${{ secrets.CLOUDBASE_SECRET_ID }}
          TCB_SECRET_KEY: ${{ secrets.CLOUDBASE_SECRET_KEY }}
          CLOUDBASE_ENV_ID: cloud1-6gt5ulxm10210d0f
        run: |
          # CloudBase CLI 通过环境变量自动认证
          echo "✅ 已配置 CloudBase 认证环境变量"
          echo "   - TCB_SECRET_ID: ${TCB_SECRET_ID:0:10}..."
          echo "   - 环境ID: $CLOUDBASE_ENV_ID"
          
          # 确认环境
          echo "检查可用环境..."
          tcb env:list 2>&1 || echo "⚠️ 环境列表获取失败，但将继续部署"
          
          # 部署前后端
          echo ""
          echo "🚀 开始部署项目到 CloudBase..."
          echo "Y" | tcb framework deploy --envId $CLOUDBASE_ENV_ID --verbose
          
          echo ""
          echo "✅ 部署完成！"

      - name: 部署结果通知
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "🎉 部署成功！"
            echo "前端地址: https://cloud1-6gt5ulxm10210d0f-1300255017.tcloudbaseapp.com/lead-management"
            echo "后端地址: https://lead-management-api-193614-4-1300255017.sh.run.tcloudbase.com"
          else
            echo "❌ 部署失败，请查看日志"
          fi
