# 🎯 线索管理系统 - AI 协作规则

## 🚨 新对话窗口必读

当你打开一个新的对话窗口时，**必须按以下顺序操作**：

### Step 1: 读取 Organization README（强制）

如果你在多项目工作区中，先读取：
- `/Users/tomnice/cursor/call-center-workspace/ORGANIZATION_README.md`

**为什么？** 因为本系统是 Call Center Organization 微服务架构中的一个子系统，你需要先了解整体架构。

### Step 2: 询问用户（强制）

如果 workspace 中有多个子系统，**必须主动询问**用户现在要开发哪个子系统。

❌ **不要假设**用户一定要开发本系统
✅ **必须等待**用户明确指定

### Step 3: 确认是线索管理系统后

按以下顺序读取文档：

1. **本 README**：`README.md`（你现在应该在这里）
2. **PRD 文档**：`docs/线索管理系统_PRD.md`（产品需求，唯一需求来源）
3. **进度跟踪**：`docs/MILESTONE_TRACKING.md`（当前里程碑和任务）

### Step 4: 向用户确认当前状态

```
我已经读取了线索管理系统的文档：
- 当前阶段：M1 - Cursor 骨架
- 前端进度：X/15 任务完成
- 后端进度：X/18 任务完成

请问要从哪个任务开始？前端还是后端？
```

---

## 📖 核心开发原则

### 1. PRD 是唯一需求来源

✅ **正确**：
- 所有功能都在 `docs/线索管理系统_PRD.md` 中查找
- PRD 中有的需求，执行
- PRD 中没有的需求，不要自己添加

❌ **错误**：
- 根据"常识"添加功能
- 根据"用户体验"自己设计功能
- 参考其他系统的需求

### 2. 严格遵循里程碑（M0-M4）

当前里程碑安排：
- **M0**: Figma 低保真原型（已完成）
- **M1**: Cursor 骨架（当前阶段）
- **M2**: 核心功能
- **M3**: 整合接口
- **M4**: 报表和提醒

📌 **规则**：
- 只做当前里程碑的任务
- 不要跨阶段开发
- 完成后更新 `docs/MILESTONE_TRACKING.md`

### 3. 开发完成后必须更新进度

在 `docs/MILESTONE_TRACKING.md` 中：
```markdown
- [x] 已完成的任务
- [ ] 未完成的任务
```

---

## 🚫 AI 绝对禁止行为

1. ❌ **不要跳过读取 PRD 和 MILESTONE_TRACKING**
2. ❌ **不要添加 PRD 之外的功能**
3. ❌ **不要跨里程碑开发**（M1 阶段不要做 M2 的功能）
4. ❌ **不要忽略更新进度文档**
5. ❌ **不要假设用户要开发本系统**（先询问）

---

## 📚 关键文件位置

| 文件 | 路径 | 说明 |
|------|------|------|
| README | `README.md` | 系统概览、技术栈、部署 |
| PRD | `docs/线索管理系统_PRD.md` | **唯一需求来源** |
| 进度跟踪 | `docs/MILESTONE_TRACKING.md` | M0-M4 任务清单 |
| Organization README | `../ORGANIZATION_README.md` | 整体架构（在 workspace 根目录） |

---

## ✅ 正确的对话开场

```
AI: 您好！我注意到这是线索管理系统的仓库。

让我先读取 Organization README 了解整体架构...
[读取 ORGANIZATION_README.md]

然后读取本系统的文档...
[读取 README.md、PRD、MILESTONE_TRACKING]

我看到：
- 当前阶段：M1 - Cursor 骨架
- 前端进度：5/15
- 后端进度：3/18

请问要从哪个任务开始？
```

---

## 🎯 记住

1. 📖 先读 Organization README（如果在 workspace 中）
2. 📖 再读本系统的 README、PRD、MILESTONE_TRACKING
3. 💬 向用户确认当前状态和要做的任务
4. 🚀 严格按 PRD 和当前里程碑开发
5. ✅ 完成后更新 MILESTONE_TRACKING

